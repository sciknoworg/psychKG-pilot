You are an expert in psychology and computational knowledge representation. Your task is to extract key scientific information from psychology research articles to build a structured knowledge graph.

The knowledge graph aims to represent the relationships between psychological **topics or constructs** and their associated **measurement instruments or scales**. Specifically, for each article, extract information in the form of triples that capture:

1) The psychological topic or construct being studied
2) The measurement instrument or scale used to assess it
3) A brief justification (1–3 sentences) from the article text supporting this measurement link

Guidelines:
- Extract meaningful **phrases** (not full sentences or vague descriptions) for both `topic_or_construct` and `measured_by`, suitable for inclusion in a knowledge graph.
- Include a short justification for each extraction that clearly supports the connection.
- If the article does not discuss psychological constructs and how they are measured (e.g., no mention of constructs, instruments, or scales), return an empty list `[]`.

Input Paper:
"""



In the same way as a carpenter is able to choose between a hammer and a screwdriver to deal with a nail, the adaptive toolbox approach to judgment and decision making assumes that, when faced with a decision problem, a decision maker is able to choose an appropriate strategy from her toolbox of decision strategies 
(Gigerenzer, Todd, & the ABC Research Group, 1999;
Payne, Bettman, & Johnson, 1993;
Scheibehenne, Rieskamp, & Wagenmakers, 2013)
. Entertaining the possibility that the mind carries such a toolbox, the question is then: how do we know which strategy to use in which situation? This question has been termed the strategy selection or "deciding how to decide" problem.
In the last two decades theoretical and empirical advances have been made in tackling the strategy selection problem. First theoretical attempts were cost-benefit approaches 
(Beach & Mitchell, 1978;
Christensen-Szalanski, 1978;
Lieder & Griffiths, 2015;
Payne et al., 1993;
Russell & Wefald, 1991)
. According to this approach, people choose a strategy by trading the benefits of applying a strategy against its costs. The benefits are related to the strategy's accuracy, while the costs are related to the time or cognitive effort of applying the strategy. More recently, reinforcement learning approaches appeared as an alternative to cost-benefit analysis 
(Erev & Barron, 2005;
Rieskamp & Otto, 2006)
. The focus of this approach is the learning process by which those strategies that result in highest average rewards end up being used relatively more than other, less rewarded strategies.
Despite these advances, there is at least one major problem not addressed theoretically or empirically. People navigate through multiple environments -classes of situations in which a certain strategy performs better than others. Not everything is a nail and situations differ -for example, when deciding between wines you might be better off using the take-the-best heuristic 
(Gigerenzer & Goldstein, 1996)
, while for choosing a cheese you might want to use a similarity based strategy . The strategy selection approach implies that people should treat different environments as such and adapt to each as needed. Moreover, they must be able to recognize a certain decision situation as belonging to an environment and flexibly shift between different strategies as they encounter one environment or the other. The empirical evidence thus far, however, mostly shows that people are able to select an appropriate strategy in a single environment. For example, experiments in 
Pachur and Olsson (2012)
, 
Rieskamp and Otto (2006)
 and 
Karlsson, Juslin, and Olsson (2007)
 employed between-subject designs where each participant faced only one environment. 
1
 Hence, the question if participants can adaptively select strategies in tasks with multiple environments and decision situations is still unanswered.
Improvements can also be made in terms of evaluating formal models of strategy selection. Thus far empirical evaluations were based on environments where values of alternatives were linear functions of cues or attributes and information about the function in terms of cue validities was provided to the participants 
(Lieder & Griffiths, 2015;
Rieskamp, 2006;
Rieskamp & Otto, 2006
, but see J. Hoffmann, von Helversen, & Rieskamp, 2014
, for a recent exception). Exemplar-based strategies 
(Nosofsky, 1984;
 have not yet been included in such models. 
2
 Given the body of evidence for exemplar-based processing and that such strategies can also perform well in nonlinear types of environments, support for any strategy selection model is incomplete when only evaluating it in linear environments. Moreover, explicitly providing information about the statistical properties of the environment greatly facilitates solving the strategy selection problem. In more realistic situations these properties have to be discovered as well, and this important aspect of the strategy selection problem has thus far been ignored.
Our objective is to put the strategy selection approach to judgment and decision making to a stronger test by evaluating it in a multi-environment setting where participants face alternating instances of two different environments on a trialto-trial basis. Moreover, one environment will be of a linear, while other of a nonlinear nature -requiring of participants to adopt qualitatively different strategies to perform well in them. Finally, the characteristics of the environments will be initially unknown and participants need to learn their properties.
We make two main contributions. First, we provide evidence that people can learn to flexibly use appropriate decision strategies on a trial-to-trial basis in initially unknown linear and nonlinear environments. This provides strong additional support for the strategy selection approach to deci-sion making. Second, our contextual version of the reinforcement learning based strategy selection model 
(SSL Rieskamp & Otto, 2006)
 accounts for how people learn to associate different decision strategies to different environments. In what follows, we first discuss the problem of strategy selection in multiple environments and examine how it fits in the landscape of existing theories of strategy selection. We then describe the design of our experiment, introduce the task and our qualitative predictions, and report the results. Then we describe the formal implementation of the contextual SSL model and assess how well it accounts for our results. We close with a discussion of our results and a call for further theoretical development with regards to the interaction between the categorization of environments and strategy selection.


Strategy selection in multiple environments
In a reply to a précis on fast-and-frugal heuristics 
(Todd & Gigerenzer, 2000)
, an influential work outlining a decision making framework where strategy selection has a strong role, 
Luce (2000)
 applauded the authors for presenting a different approach to studying judgment and decision making, and raised an issue of "how does one classify problems and decide upon which of several fast and frugal heuristic to employ?" (p. 758). In the same issue, 
Morton (2000)
 also noticed that classifying decision problems is a necessary component of the approach. Morton imagined an agent having a set of strategies and a database of previously encountered problems. The database contains the type of problem, which strategy was applied, and its performance. When a new problem is encountered, this database can be used to classify the problem and then to select between the strategies. Decisionmaking researchers took little notice of these early observations -the issue of how people classify problems has not been addressed explicitly yet.
Classifying problems does not look like a serious issue at first glance: everybody can trivially see that choosing between cheeses is a different situation than choosing between wines. But here is the catch: while such perceptual features can signal that a decision problem is different from another one, they may not be relevant at all for determining which strategy should be used in it.
Normative research has shown that important indicators for strategy performance are statistical properties of the en-1 There are studies that examined dynamic environments, where there is a sudden shift in statistical properties and appropriate strategy 
(Bröder & Schiffer, 2006;
Rieskamp, 2006)
. However, this is a change in properties of the same environment and there was no difference in observable features that would indicate the difference between the environments.
2 In fact, 
Rieskamp and Otto (2006)
 considered it to be an alternative to their SSL model, instead of possibly another strategy in the toolbox. vironment. For example, in environments where the value of an alternative is a weighted additive (linear) function of cue values, features such as dispersion of cue weights or cue inter-correlations are good predictors of strategy performance 
(Hogarth & Karelaia, 2005a
, 2005b
, 2006a
, 2006b
Martignon & Hoffrage, 2002;
Martignon & Laskey, 1999)
. In such linear environments optimal cue weights can have a compensatory or non-compensatory type of dispersion. A non-compensatory pattern is such that the cue with the greatest weight cannot be beaten by any pattern of values for the remainder of the cues. In a non-compensatory environment, a lexicographic strategy such as take-the-best (TTB; 
Gigerenzer & Goldstein, 1996)
, which focuses on the most important cues and ignores the rest, will perform well. In an environment where the optimal cue weights have a compensatory pattern, a strategy that integrates all the cues, such as the weighted additive rule (WADD; 
Payne et al., 1993)
, will perform well. Higher inter-correlations between the cues imply higher redundancy, that is, less information is obtained from knowing the value of each additional cue. Hence, lexicographic strategies do not lose much by ignoring most of the cues and might outperform strategies that integrate all cues 
(Hogarth & Karelaia, 2005a
, 2006a
. 
3
 Cue weight dispersion and cue inter-correlations are not immediately available perceptual features. A compensatory and non-compensatory environment might be perceptually very similar. And two environments that are perceptually very different might both be of a compensatory nature, and thus should belong to the same category with respect to decision strategies. When faced with an unknown environment, how do people infer the statistical properties of that environment in order to choose which decision strategy to apply? Taking a reinforcement learning approach to strategy selection, such inferences are not actually required. What matters is that people can learn that certain features indicate that compensatory strategies are likely to be successful, and other features are predictive of the success of non-compensatory strategies. Nonetheless, strategy selection in multiple environments involves non-trivial complexities of mapping the decision situations to the space of strategies.
What are the potential solutions to this joint problem of selecting the strategy and classifying decision situations? 
Lieder and Griffiths (2015)
 propose a solution in the vein of the cost-benefit tradition, where one weighs the cost of applying each strategy against its estimated accuracy, and selecting the one that yields the best ratio. They propose using the statistical properties discussed above as features to predict the expected reward of applying each strategy through linear or logistic regression. Such an approach can work well when decision makers know the properties and relevant features of the environment well. This is the situation in which 
Lieder and Griffiths (2015)
 evaluated their model -participants encountered compensatory and non-compensatory en-vironments with the validity of each cue displayed. However, their model cannot be applied as easily in situations where such environmental properties are initially unknown. Nonlinear environments pose an even greater obstacle. While the statistical properties of linear environments have been identified that predict whether TTB or WADD will fare better, features that predict whether exemplar-based strategies are more appropriate, such as those related to the nonlinearity of environments, are not yet known 
(Pachur & Olsson, 2012)
.
In this paper we take a reinforcement learning approach to solving the dual problem of classifying decision situations and selecting the appropriate strategy within a situation. In the reinforcement learning approach, a strategy which accumulates more rewards when applied in a particular environment will be used more often. The SSL model 
(Rieskamp & Otto, 2006)
 has previously been used to describe strategy selection in single linear compensatory or noncompensatory environments with known cue validities. To deal with multiple environments, we extend SSL by assuming that decision makers use observable features to separate decision situations into different categories (e.g., cheeses and wines). Ignoring the latent statistical properties, this contextual version of SSL will run two separate reinforcement learning processes, one for each category, treating them as potentially different environments. If cheese and wine categories are indeed such that different strategies should be used in them, the model will eventually learn which strategy results in higher average reward. However, if they were such that the same strategy should have been used in both -for example, if both turned out to compensatory such that WADD performs well -then the effort was duplicated. This is a slow and potentially wasteful mechanism, but it has the advantage that the decision maker does not have to know complex statistical features such as cue inter-correlations. This is particularly useful when facing nonlinear environments, where we only need to assume that the decision maker's repertoire also contains strategies that can handle nonlinear environments, such as exemplar-based strategies 
(Nosofsky, 1984;
Pachur & Olsson, 2012)
. In addition, we assume that the decision maker's repertoire contains strategies that are able to learn, or approximate, a variety of functions that relate the cues to the value of decision alternatives. Whilst learning which strategy to use, a decision maker si-multaneously adapts individual strategies to the particulars of the environment. Hence, our contextual SSL model can work both in novel situations and in environments that decision makers know well. With sufficient experience, the individual strategies in the repertoire have adapted to the environment and it is clear which strategy will provide the maximum rewards.


Overview
We examined whether people are able to learn to use appropriate decision strategies when faced with multiple environments, flexibly shifting between them on a trial-by-trial basis. Participants in our experiment performed a paired comparison task where the goal was to pick the alternative with the highest criterion value. Each alternative was described by four cues and each paired comparison belonged to one of two types of environments -a linear or a nonlinear environment. In the linear environment, the task can be solved equally well by either a cue-based strategy that combines cue values in a linear fashion or an exemplar-based strategy. In the nonlinear environment, an exemplar-based strategy has a clear advantage over cue-based strategies as it can approximate the nonlinear function. The main prediction of a strategy selection approach to decision making is that in the linear environment the participants will adopt a strategy mix where cue-based strategies are used most often. In the nonlinear environment, the strategy mix should be dominated by exemplar-based strategies.
As outlined in the previous section, the reinforcement learning approach to strategy selection tackles this problem by partitioning the decision situations on the basis of perceptual information. We used two cover stories that were easy to visually differentiate -"bugs" and "comics" -that represented either the linear or nonlinear environment. If participants cannot adopt appropriate strategy mixes in this relatively simple situation, there is little hope they will be able to do so when faced with less perceptually differentiated environments.
Our analysis relies on two modeling approaches. After confirming that participants indeed learn over time in our task we first identify which strategy they have adopted in each environment. We accomplish this by fitting several cuebased and exemplar-based models separately to trials from each environment. We examine the extent to which participants have appropriately adopted different classes of strategies in each environment and narrow down the most representative strategies in both cue-based and exemplar-based class. Second, using the selected representative strategies as a strategy repertoire, we fit the contextual strategy selection learning model to both environments simultaneously, with the aim of explaining how the strategy preferences develop over time. With the first modeling exercise, besides deriving inputs for the strategy selection modeling, we obtain ev-idence of strategy use that does not rely on the precise learning mechanism we assume in the strategy selection modeling.


Method 4
Participants Fifty-five participants (29 women, 26 men, M age = 21.4, age range: 18-40 years) took part in the experiment. Participants were recruited from the Universitat Pompeu Fabra subject pool. They were paid a show-up fee of three euros and an additional performance-dependent bonus (5.8 euros on average). The experiment was run in groups of about 10 people in the BES laboratory at Pompeu Fabra University. The experiment lasted for one hour on average.
Six participants did not reach the required level of accuracy in the training phase and did not continue to the test phase. Two of these participants failed to reach the required level of accuracy in the nonlinear environment, while the other four did not perform well enough in the linear environment. These participants were excluded from the analysis completely. The final sample consisted of 49 participants (27 women, 22 men, M age = 21.6, age range: 18-40 years).


Materials
On each trial in the learning and test phase, participants were presented with a pair of stimuli and had to choose the stimulus with the higher criterion value. The stimuli used were modified from 
Pachur and Olsson (2012)
 and 
Olsson, Enkvist, and Juslin (2006)
. Fifteen unique stimuli with four binary cues were used to construct choice pairs in both the linear and nonlinear environment. 
Table 1
 shows the cue patterns of all the stimuli together with their criterion value in both environments. The criterion value in the linear environment, y L , was a linear function of four cues, c 1 , c 2 , c 3 and c 4 :
y L = 0.1 + 0.4c 1 + 0.3c 2 + 0.2c 3 − 0.1c 4
An independent error term was added to both items in each pair, drawn from Normal distribution with a mean of 0 and standard deviation of 0.15. The noise was added to provide probabilistic feedback and further induce the usage of a cuebased strategy 
(Juslin, Jones, Olsson, & Winman, 2003)
. Following 
Olsson et al. (2006)
, the criterion value in the nonlinear environment, y NL , was a nonlinear function of the linear criterion values:
y NL ≈ 4.0508y L − 0.0367y 2 L − 110.8225
No noise term was added in the nonlinear environment. The environments were randomly interleaved in the training and test phases. The purpose of the training phase was to allow participants to learn how to solve the tasks. The training phase consisted of four blocks, 84 trials in each block -44 trials from the linear and 40 from the nonlinear environment -giving 336 trials in total. For the linear environment we created 44 pairs using 10 unique stimuli -all possible combinations except for one pair where the stimuli had identical criterion levels. For the nonlinear environment, we used five unique stimuli and created all possible pairs, 10 in total, and repeated these 10 pairs four times. The stimuli used in the training phase are marked as "Old" in 
Table 1
. We used smaller number of unique stimuli in the nonlinear environment to induce people further to adopt an exemplar-based strategy 
(Olsson et al., 2006)
.
The purpose of the test phase was to more clearly assess the strategy mix adopted in each environment and to see the extent to which participants generalized what they learned in the learning phase. For the linear environment, we used five new unique stimuli together with old ones to create 18 pairs. Seven pairs with old stimuli from the training phase were repeated four times and the remaining nine pairs that included at least one new stimulus were repeated eight times, giving 116 trials in total. For the nonlinear environment, we selected from the pairs used in 
Pachur and Olsson (2012)
 those that maximized the discrimination between cue-based and exemplar based strategies. The resulting 17 pairs include eight new stimuli, together with old ones. Three pairs with old stimuli were repeated four times and the remaining 14 pairs with at least one new exemplar were repeated eight times, giving 124 trials in total. In the whole test phase there were 240 pairs. Participants did not receive feedback on their choices.
We used two different cover stories for the linear and the nonlinear task -poisonous "bugs" and dangerous "comics". In the bugs story participants had to choose which bug was more poisonous, and in the comics story they had to choose which comic figure was more dangerous. The stimuli consisted of pictures of either bugs or comic figures, and both bugs and comic figures varied on four binary cues. In bugs -antennae, spots on the back, wings, and legs, were either present or absent. Similarly, in comic figures -hair, ears, nose, and stripes on the shirt, were either present or absent. Pictures of bugs and comics were a subset of those in J. 
Hoffmann et al. (2014)
.
The mapping of bugs or comics to the linear and nonlinear environment, and physical features (e.g., hair, ears) to the cues (c1, . . . , c 4 ), was determined at random for each participant. For instance, for one participant the first trial might correspond to linear environment represented as a choice between bugs, where c 1 corresponded to the presence of antennae. For another participant, the first trial might correspond to the nonlinear environment represented as well as a choice between bugs, but c 1 corresponded to the presence of wings. Trials from both environments were randomly interleaved for each participant. Order of the trials was randomized within each block in the training phase and in the whole test phase. Position of the stimuli on the screen (left or right) was also randomized on each trial.
To proceed to the test phase, participants had to reach 70% accuracy in both environments in the last block of the training phase. When participants did not satisfy this criterion, we provided them with another block of trials and checked their accuracy again. Participants who failed to reach the required level of accuracy after two additional training blocks were not allowed to continue the experiment.


Procedure
Participants completed the experiment on desktop computers, using custom software written in Python and the Psy-choPy library 
(Peirce, 2007)
. At the beginning of the experiment, participants completed an informed consent form. They then received on-screen instructions about the task and earnings. All instructions were presented in Spanish.
To motivate participants, we told them that while the task would initially be difficult, they could improve with practice. Moreover, depending on their performance they could earn additional money: on every trial they could earn experimental units (EU's) -they gained 10 EU's for a correct choice and lost 10 EU's for an incorrect choice. The exchange rate was 1 euro for 500 EU's. Participants started the experiment with zero EU's and they could see the running total during the training phase, but not the test phase.
We did not provide participants with information on the exact number of rounds in each phase, instead we told them that the experiment would take 60 minutes on average to complete. The test phase was announced at the beginning of the instructions but without specific details, which were provided only at the start of the test phase. Earnings in the test phase were computed in the same way as in the training phase.


Results


Behavioral analysis
We used the proportion of expected correct choices (choosing the alternative which is expected to have the highest criterion value) in a block of trials as performance measure.
Training phase. 
Figure 1
 shows the performance in the learning phase for each environment. Participants performed substantially better than chance already in the first block, achieving a mean accuracy of 0.76 in the linear and 0.68 in the nonlinear environment. In fact, in the linear environment, performance was better than chance even on the very  
(Brehmer, 1974;
Busemeyer, Byun, Delosh, & McDaniel, 1997;
Olsson et al., 2006)
 and the linear environment is consistent with this belief; hence, initial guesses that a bug or comic with more features present is more poisonous or dangerous were correct on average. Overall, participants improved during the training phase, reaching a mean accuracy of 0.85 in the linear environment by the last block. A Wilcoxon signed rank test shows a significant difference in choice accuracy between the first and last block, M di f f = .09, Z = 989, p ≤ .0001. A similar result holds for the nonlinear environment, where participants achieved 0.90 by the last block, which is significantly higher than performance in the first block, M di f f = .22, Z = 1175, p ≤ .0001.
In the last training block, performance in the nonlinear environment reached a higher level than in the linear environment, as shown by a Wilcoxon signed rank test on the difference in choice accuracy between the environments, M di f f = .049, Z = 262, p = .0003. This indicates that the linear environment was more difficult to learn than the nonlinear environment, at least with the amount of training trials in our experiment. Although there is some evidence that people can learn nonlinear functions better than linear ones (J. 
Hoffmann et al., 2014;
J. A. Hoffmann, von Helversen, & Rieskamp, 2013;
von Helversen & Rieskamp, 2008)
, most studies show the opposite (e.g. 
Brehmer, 1994;
Busemeyer et al., 1997)
. In our experiment, the small number of exemplars and deterministic feedback used in the nonlinear envi-ronment evidently facilitated learning compared to the linear environment.
Note that the results of block five and six are based on responses of a subset of participants who completed an additional one or two blocks in the training phase. Five participants completed two additional training blocks due to poor performance in the linear environment, while 13 participants completed one additional block (six of these due to poor performance in the linear environment). In 
Figure B1
 in Appendix B we illustrate choice accuracies separately for groups of subjects that did or did not require additional training blocks. While slower learners took more time, by the end of the training phase they achieved performance levels similar to the faster learners. For this reason here and in the rest of the article we plot the results of all participants together, but point out that some results (i.e., those in block 5 and 6) are based on a subset of participants.
Decrease in response time is another behavioral signature of learning. The time to make a choice in both environments almost halved by the last block in the training phase, from 4.61 to 2.85 seconds, M di f f = 1.76, Z = 1225, p ≤ .0001. Moreover, on average participants took more time to make a choice in the linear environment, M di f f = .38, Z = 990, p ≤ .0001 (Wilcoxon signed-rank test).
Test phase. How well did the participants generalize their knowledge from the training phase to the test phase? In the test phase participants encountered pairs with new stimuli and they did not receive feedback on their choices. Results of block five and six come from a subset of participants that took additional one or two blocks in the training phase. Error bars represent standard errors of group means of each block of trials. Points are displaced horizontally to make them easy to distinguish. In addition, we display mean accuracy in the very first trial and across the first ten trials, marked with numbers one and ten, respectively.
ing block: in the linear environment it decreased from 0.85 to 0.68 and in the nonlinear environment from 0.90 to 0.80. The difference in accuracy between nonlinear and linear environments found in the training phase persisted in the test phase, M di f f = .114, Z = 290, p = .001. Response times in the test phase were very similar to those obtained in the last training block. The decrease in performance from training to test phase was expected as the pairs in the test phase contained many new items that participants had not experienced before. The somewhat larger decrease in the linear environment was partly due to the slower learners. As shown in 
Figure B1
 in Appendix B, those participants who needed two additional training blocks had particularly poor performance in the linear environment. Without these five subjects, the mean accuracy in the linear environment in the test phase increases to 0.71. Interestingly, their performance in the nonlinear environment did not suffer at all.


Identifying the strategies adopted by the participants
We used cognitive modeling to investigate which decision strategies participants relied on in the linear and nonlinear environments. We expected that participants would adopt an exemplar-based strategy in the nonlinear environment and a cue-based strategy in the linear environment. While both classes of strategies can perform well in the linear environment, we expected the probabilistic feedback and fewer repetitions of stimuli to tip the scale in favor of cue-based strategies.
We used several models from the literature as representatives of each type of strategy. The cue-abstraction model (CAM, 
Pachur & Olsson, 2012)
 and weighted additive (WADD, 
Payne et al., 1993)
 model are representative cue-based strategies. To represent the exemplar-based strategies we used two versions of the generalized context model (GCM, ) that were specifically adapted for pairwise comparison tasks as used here. We describe the models in more detail in the following sections, while the estimation procedure and overview of estimated parameters can be found in Appendix A. In 
Table 2
 we list the models we set out to investigate. We examined several other variants of these models in an exploratory manner, their results and parameters are presented in Appendix A, however, we do not focus on these in the main text.


Table 2
Overview of the models representing each type of strategy. We used more than one model per type of strategy as we are mainly interested whether a certain type of strategy has been adopted. Previous research has shown significant individual variation in which particular cue-or exemplar model describes behavior best in an environment. For instance, some people are better described by the WADD model and some by the CAM in a linear environment (e.g., 
Pachur & Olsson, 2012)
. Including several instantiations of cue-and exemplar-based models should reduce the chance of falsely rejecting our hypotheses due to the particular choice of model.
The weighted additive (WADD) model. The weighted additive model 
(Payne et al., 1993)
 and take-the-best heuristic 
(Gigerenzer & Goldstein, 1996)
 are popular models for describing the behavior in pairwise comparison tasks. We used the probabilistic generalization of these models developed by 
Bergert and Nosofsky (2007)
. In the WADD model the probability that A will be chosen over B is given by
P(A; A, B) = (Σ a∈FA w a ) γ (Σ a∈FA w a ) γ + (Σ b∈FB w b ) γ ,
where γ ≥ 0 is a free response scaling parameter and w j (0 ≤ w j ≤ 1) are the weights assigned to each individual cue, constrained to sum to 1. FA and FB denote the set of discriminating cues favoring alternatives A and B, respectively. 5 Generalized take-the-best (gTTB) is a special case with scaling factor γ set to 1. Although the predictions of two models are equivalent in that case, the implied psychological processes are different. In the main text we present the result for WADD model since gTTB is a special case of WADD. We report results specifically for gTTB in Appendix A.
As these models are based on a linear combination of cues, they are especially well suited for linear environments. This gives them an edge in linear environments, but prevents them from performing well in nonlinear environments. Scaling parameter γ can additionally capture potential inter-individual differences in sensitivity to differences in evidence between alternatives.
Overall, the WADD model had four parameters -γ, w 1 , w 2 and w 3 , while the gTTB model had three parametersw 1 , w 2 , and w 3 .
Cue-abstraction model (CAM). The cue abstraction model 
(Juslin et al., 2003;
Pachur & Olsson, 2012)
 is another model that combines evidence in a linear way. Alternatives are evaluated jointly by looking at the difference of each cue value ∆c j = c jA − c jB , j = 1, .., 4. The importance of each cue difference is reflected in its cue weight w j ≥ 0. The higher the cue weights are, the more they will influence the choice. The probability that alternative A will be chosen over alternative B is given by
P(A; A, B) = e Σ j w j ∆c j 1 + e Σ j w j ∆c j ,
Essentially, CAM is a logistic regression model without an intercept. It is also similar to the WADD model; the main difference being that CAM transforms the evidence into choice probabilities through a logistic function and allows for more subjectivity in weights. Even though the models produce similar predictions, empirically researchers have found differences in terms of fit to choice behavior 
(Pachur & Olsson, 2012)
. We tested two versions of the model. In CAM c the weights are constrained to lie between 0 and 1 and to sum to 1, i.e. 0 ≤ w j ≤ 1, and 4 j=1 w j = 1, while in CAM u they are unconstrained. The constraint prevents the weights from becoming very large which can reduce overfitting and may help the model to generalize better. Because the constraint implied positive effects for all cues, we reversed the direction of some cues using the same procedure as for WADD and gTTB. We focus on the more general CAM u and we examined CAM c in an exploratory manner. Results of CAM c are reported in Appendix A. CAM u had four parametersw 1 , w 2 , w 3 and w 4 , while CAM c had three parametersw 1 , w 2 , and w 3 .
The generalized context model (GCM). The generalized context model is a memory-based exemplar model widely used in category learning 
(Nosofsky, 1986)
, but also 
5
 In our environments some cues have a negative effect on the criterion and the sign of the difference between the cue values of two alternatives needs to be reversed (multiplied by minus 1) whenever the difference is not equal to zero. For each environment we fitted the WADD to the actual winning alternatives with all possible combinations of cue reversals. In the linear environment the WADD with fourth cue reversed performed the best, and in the nonlinear the WADD with second, third and fourth cue reversed was the best. When fitting the model to each individual we reversed the cues according to these results. for continuous judgments 
(Juslin et al., 2003;
Speekenbrink & Shanks, 2010)
. GCM assumes that previous experiences are stored as instances in memory and when a new situation arises, a prediction is generated by combining exemplars stored in memory according to their similarity to the new situation. The similarity component allows the model to mimic both linear and nonlinear functions, which is why it can perform well in both types of environment.
We used the GCM developed for pairwise comparison tasks by 
Nosofsky and Bergert (2007)
. The model compares the probe (the current pair of alternatives) to the previously encountered exemplars (pairs of alternatives) that are kept in the memory. The model determines how similar the probe p is to each exemplar i through an exponentially decreasing function of the distance d(p, i) between the probe and exemplar
S (p, i) = e −λd(p,i) q ,
where 0 ≤ λ ≤ 10 is a sensitivity parameter and q = 1 for the exponential, and q = 2 for the Gaussian similarity function. The distance function is the generalized Minkowski distance
d(p, i) = Σ J j=1 w j |c p j − c i j | r ] 1/r
with Minkowski parameter r being either 1 or 2. c p j and c i j are the cue values of probe p and exemplar i, respectively, for cue j. w j , 0 ≤ w j ≤ 1, are attention weights assigned to each individual cue, constrained to sum to 1. The more closely the cue values of the probe and the exemplar correspond to each other, the smaller the distance between them and the greater the similarity. 
Nosofsky and Bergert (2007)
 proposed two versions, depending on how the decision situation is represented. In what we call a "paired" representation, the model assumes that winning alternatives are stored as exemplars of a winners category, W, while losing alternatives are stored as exemplars of a losers category, L. Similarities to the winners and losers categories for alternative A are computed separately as
S (A, W) = i∈W s(A, i) and S (A, L) = i∈L s(A, i)
The relative evidence for alternative A is given by
G A = S (A, W) γ S (A, W) γ + S (A, L) γ
where 0 ≤ γ ≤ 10 is a free scaling parameter. Finally, the probability that alternative A is chosen is given by P 
(A; A, B
) = G A G A + G B
The "joint" representation version of the model similarly assumes that pairs of alternatives are stored as exemplars in winners and losers categories. If the feedback indicates that alternative A is a correct choice, then the pair AB is stored in the winners category as a vector where alternative B is concatenated to alternative A, while a vector BA, where A is concatenated to B, is stored in the losers category. The attention weights are the same for both alternatives and in this representation they are simply duplicated and concatenated to form a vector of the same length as pairs AB and BA. The probability that alternative A is chosen is given by
P(A; A, B) = S (AB, W) γ S (AB, W) γ + S (AB, L) γ
where S (AB, W) and S (AB, L) represent similarities of the pair AB to each exemplar in the winners and losers categories, respectively, based on the same distance and similarity computations as paired representation.
We focused on GCM versions with Minkowski distance parameter r = 1 and exponential similarity function q = 1, which we report in the main text. This model with the paired representation is denoted as pGCM γ 11 and the version with the joint representation as jGCM γ 11 . Both models had a total of five parameters: λ, γ, w 1 , w 2 and w 3 . Given the binary nature of features in our task, Minkowski and similarity parameters should not matter that much, but we explored both paired and joint versions with different combinations these parameters. In one variant we also set the scaling parameter to one. Results of all models are presented in Appendix A.
Best fitting models in each environment. 
Figure 2
 summarizes the test set generalization results of the selected models. Following 
Wagenmakers and Farrell (2004)
 we computed log likelihood (LL) weights for each of the four models in our candidate set, separately for each environment. LL weights allow for better interpretation of observed relative differences in model performances. Weight can be interpreted as the probability that a particular model is the best model, given the data and the set of models in the comparison set. See Appendix A for more details on LL weight computation.
As can be seen in the figure, on average, CAM u predicted participants' choices in the linear environment best, while in the nonlinear environment jGCM γ 11 and pGCM γ 11 performed about equally well, with CAM u closely trailing behind. In the linear environment CAM u has the greatest probability of being the best model among the four (0.57), being more than two times more likely than jGCM γ 11 (0.16) and pGCM γ


11
(0.23). WADD fared poorly, having only 0.04 probability of being the best model. For the nonlinear environment the results are less clear. Evidence is favoring jGCM γ 11 and pGCM γ 11 , with probabilities of 0.37 and 0.35 respectively, but only with a small margin over CAM u with probability of 0.28. The finding that CAM u performed well also in the nonlinear environment shows that a subset of participants did not adapt well and tried to apply a cue-based strategy in the nonlinear environment too.
Classifying individuals according to the strategy used. Average results do not tell us exactly how well adapted the participants are. We classified participants as users of those strategies that best predicted their choices in the test phase, separately for the linear and nonlinear environment (numbers denoted with N in 
Figure 2
). In the linear environment most participants were best described by one of the cue-based strategies. In the nonlinear environment most participants were best described by one of the exemplar-based strategies, although the number of participants best described by the CAM u model was also large. Thus, for a majority of the participants, we found evidence that they were able to adaptively switch between strategies from trial to trial, as they encountered different environments.
In the linear environment, 19 participants were best described by one of the exemplar-based strategies. Recall that in the linear environment both classes of strategies can achieve good performance, while in the nonlinear environment only exemplar-based strategies can achieve good performance. In the nonlinear environment there were 15 participants that were best predicted by CAM u . These participants either did not learn to select a more appropriate strategy for the nonlinear environment or failed to separate decision situations into two different environments.
Overall, 12 participants used exemplar-based strategy in both environments, while 8 used cue-based strategy exclusively. 29 participants adopted exemplar-based strategy in one environment and cue-based in the other, 7 of which used them in unexpected fashion -exemplar strategy in the linear and cue-based strategy in the nonlinear environment.


Contextual strategy selection learning
The previous analysis showed that the majority of participants successfully adopted a cue-or exemplar-based strategy in the linear environment, and an exemplar-based strategy in the nonlinear environment. However, that analysis did little to inform how the associations between strategies and environments were learned.
To describe this process in our experiment, we used a contextual version of the reinforcement learning based SSL model 
(Rieskamp & Otto, 2006)
. In contrast to the original SSL, we assume that people form two categories of situations based on perceptual features -the "bugs" and the "comics" category. Our version of SSL then learns which strategy is more successful separately for the "bugs" and the "comics" category. Moreover, our strategies are probabilistic and the repertoire contains exemplar-based strategies that can perform well in the nonlinear environments. We fitted the model to the training phase for each individual, exam-ined what strategies were adopted and how well the choices in the test phase are predicted with the particular strategy mix adopted in the training phase.
The model. The original SSL model 
(Rieskamp & Otto, 2006)
 assumes that people have a repertoire of strategies they can apply to the decision problem at hand. A crucial assumption in the model is that rewards obtained from the choices reinforce the strategies instead of specific alternatives. The main implication of the model is that the strategy that on average leads to higher rewards will be chosen more often.
In the contextual SSL (CSSL) we assume that the decision problem that is encountered can be a member of one of E environments. The first step is then to categorize the problem as belonging to one of the environments, e ∈ 1, ..., E. We assume there is a vector of contextual features x and that there exist a mapping, f (x), from contextual features to environment categories, e ∈ 1, ..., E. The contextual features can take any form, for example the time available for making a decision, cue weights, (non)compensatoriness of the cue weights, or simply perceptual features of the alternatives. In light of our discussion in the introduction, what is relevant is that problems are differentiated -there is no further meaning ascribed to any of the categories. Our experiment was designed so that the mapping function, f (x), is particularly simple; we made it highly likely that participants use perceptual features -bugs and comics -to partition the problems into two categories. And as this indeed is a useful way to partition the problems, they are likely to stick with it. Hence, for the purposes of the present experiment, we assume that the model employs a simple deterministic function from a single contextual feature, x ∈ {bugs, comics}, to two environments, e ∈ 1, 2.
In the second step, the model chooses a strategy from the repertoire where strategy expectancies are conditional on the environment. Expectancy is a measure of preference for a certain strategy in an environment. The probability of choosing strategy s from repertoire S in environment e at trial t is defined as
P t (s|e) = Q t (s|e) θ S s Q t (s|e) θ ,
where Q t (s|e) is the expectancy of strategy s in environment e at trial t and θ is a sensitivity parameter. When θ = 1 we obtain 
Luce's (1959)
 choice rule. Initial expectancies are defined by Q 1 (s|e) = r max wβ s , where 0 < w < 10 is an initial association parameter, r max is the maximum reward that can be obtained with a correct decision in the task (10 experimental points in our case), and the β s parameter describes the initial bias toward a certain strategy (with 0 ≤ β s ≤ 1, and s β s = 1). In addition, if Q t (s|e) falls below some minimum level ρ due to negative payoffs, it is set to ρ = 0.0001. .4
.5
.6
.7
.8
.9
1.0 C A M u W A D D p G C M 1 1 g j G C M 1 1 g C A M u W A D D p G C M 1 1 g j G C M 1 1 g


Log likelihood weights
Cue-based strategy Exemplar-based strategy 
Figure 2
. Model performance in predicting individual choices in the test phase, presented separately for each environment. Performance is expressed as mean log likelihood weight across participants, computed for these four models in the comparison set. Numbers above the bars represent number of participants whose choices in the test phase were best predicted by each of the models. Most people were best predicted with cue-based strategies in the linear environment, and with exemplar-based strategies in the nonlinear environment.
After applying the selected strategy a reward is obtained and this reward is the basis for updating the expectancies of the strategies:
Q t (s|e) = Q t−1 (s|e) + I t−1 (s|e)r t−1 (s|e)
where I t−1 (s|e) is an indicator function, and r t−1 (s|e) is the reinforcement. 
6
 In our case reinforcement is the payoff that the strategy produces, either 10 or -10 experimental points. We implemented two types of indicator function: deterministic and proportional. The deterministic indicator function equals 1 if the strategy s was applied, and 0 if it was not. How do we infer that the strategy was chosen? If the strategy prediction coincides with the participant's choice (that is, if the probability of choosing the alternative is greater than 0.5), and if other strategies predict a different choice, we assume that the participant has chosen that strategy. If more than one strategy prediction coincides with the participant's choice, we assume that I t−1 (s|e) equals the probability with which the model predicts the selection of those strategies in a given environment, P t (s|e). In this case, the strategy preferences do not change as ratio of expectancies will remain constant.
In the original SSL model only a deterministic indicator function was used since the authors considered only deterministic strategies. The proportional indicator function takes the probability with which each strategy predicts the participant's choice and produces a weight normalized by the sum of the probabilities. This mechanism provides a more gradual strategy learning process. Since this mechanism would lead to smaller relative differences between the strategy expectancies, we used proportional indicator function in combination with a sensitivity parameter θ in the choice rule as a free parameter. Since we do not directly observe which strategy was employed, the proportional indicator function makes a more reasonable choice than the deterministic ones. We assumed there are two strategies in the repertoire -a representative of exemplar-based strategies and a representative of cue-based strategies. Following the results of modeling the test phase choices, we chose jGCM γ 11 to be the representative of exemplar-based strategies, and CAM u as representative of cue-based strategies. Strategies also have free parameters. This is another deviation from the original SSL model, besides partitioning according to the observable features and proportional indicator function. In CAM u cue weights are free parameters, and in jGCM γ 11 γ, λ and attention weights are free parameters. Hence, learning occurs on multiple levels -adapting the strategy mix at the strategy selection level, and adapting the strategies themselves to each environment. 
7
 Overall there were three parameters on the strategy learning level, the initial association parameter w, initial strategy bias parameter β s and sensitivity parameter θ. We varied whether a deterministic or proportional indicator function was used, marked with prefix d and p respectively. When a deterministic indicator function was used we fixed θ to one, reducing the number of parameters by one.
Results of modeling the strategy selection learning. Modeling results in terms of projective fit in the test phase are depicted in 
Figure 3
. Details of the fitting procedure can be found in Appendix A, and estimated parameters in 
Table A2
 in the same Appendix. We compared the context sensitive CSSL model with the original SSL model (for details, see 
Rieskamp & Otto, 2006)
 containing the same two strategies in the repertoire and governed by the same strategy selection parameters. We also fitted single strategies CAM u and jGCM γ 11 to choices from both environments, to investigate how the strategy selection models compare to simpler explanations using single strategies.
We can see that the contextual versions of SSL fared better than the original SSL and single strategy models. dCS S L model with deterministic indicator function predicted participants' choices in the test phase the best, reaching probability of 0.26 of being the best model among the six we have considered. pCS S L θ performed worse, reaching probability of 0.17, but still better than dS S L and pS S L θ models that have probabilities 0.11 and 0.16 respectively of being best models. Interestingly, the version with the deterministic indicator function had a worse performance in this case. Numbers above the columns indicate the number of individuals best fitted with the model. These show that 21 participants are best described by one of the CSSL models, while 14 are best described with one of the SSL models. Although CSSL models predict participants' choices better, the advantage over simpler SSL models does not look immediately impressive. However, the advantage is considerable given that CSSL models are more complex, effectively having twice as many parameters (when strategy-specific parameters are taken into account) and still perform well on the held-out sample.
With respect to the single strategy models, given that choices of many participants in the nonlinear environment were best predicted with the CAM u model, we expected CAM u to perform well when fitted to the whole data. Indeed, CAM u has probability of 0.19 of being the best model, second only to the dCS S L model, and nine participants were best predicted with this model. jGCM γ 11 model performed the worst, reaching probability of 0.11 and predicting choices of five participants the best. Overall, single strategy models performed as well as the SSL (but not CSSL) models.
Which strategies do CSSL models adopt in each of the environments? 
Figure 4
 shows the evolution of probability of choosing the exemplar-based strategy (as represented by the jGCM γ 11 model) over blocks of trials, presented in terms of averages across the participants. As we expected, by the end of the training phase the exemplar strategy was the preferred one in the nonlinear environment; dCS S L and pCS S L θ models ended up with probabilities of 0.73 and 0.71 of choosing the exemplar strategy. There is very little difference between the models in terms of evolution of strategy preferences as well. Inspecting the end-of-training strategy mixtures for both CSSL models, most participants can be described as having a higher probability to use the cue-based strategy in the linear environment and the exemplar strategy in the nonlinear -31 for dCS S L and 39 for pCS S L θ model. Fewer participants are described with mixtures that favor exemplar strategies (12 for dCS S L and 5 for pCS S L θ ) or cuebased strategies (6 for dCS S L and 4 for pCS S L θ ) in both environments. Only one participant was described by the pCS S L θ model as preferring the exemplar strategy in the linear and the cue-based strategy in the nonlinear environment.
The parameters for the initial preference toward a strategy, w and β, were shared across environments. For most participants parameter values indicate a weak initial preference for the cue-based strategy as both CSSL models started with a weak initial preference for the CAM u model. In the linear environment this preference was kept more or less constant throughout the training phase (ending at probabilities of 0.35 for dCS S L model, and 0.39 for pCS S L θ ). In the nonlinear environment the change in strategy expectancies was strong and steered rapidly in favor of the exemplar strategy. There are substantial deviations in the fifth and sixth block of the training phase. This is due to several slower learners on which these data points are based, that had different evolution of strategy mixtures.
The difference between the environments in which strategy is mostly adopted is the source of improvement offered by CSSL in comparison to the SSL and single strategy models. It results in a weak preference for the cue-based strategy in the linear environment and strong preference for the exemplar-based strategy in the nonlinear environment. In .7
.8
.9
1.0 C A M u j G C M 1 1 e p S S L q d S S L p C S S L q d C S S L


Log likelihood weights
Single strategy Original SSL Contextual SSL 
Figure 3
. Model performance in predicting choices in the test phase for contextual strategy selection learning models (CSSL), original strategy selection learning models (SSL), and two single strategy models -CAM u and jGCM γ 11 . Performance is expressed as mean log likelihood weight across participants, computed for these six models in the comparison set. Numbers above the bars represent number of participants whose choices in the test phase were best predicted by each of the models. contrast, SSL can learn only a single strategy mixture that works best on average over all environments and here both SSL models develop a strong preference for the exemplarbased strategy. These differences can be seen more clearly in 
Figure B2
 in Appendix B, where model performance is shown separately for the environments. We can see that because the CSSL models predict choices in the linear environment much better than the SSL models, whose performance suffers in the linear environment.


Discussion
We presented an experiment where participants were asked to solve two interleaved choice tasks. In one task (the linear environment), a cue-based strategy was more appropriate while in the other (the nonlinear environment), an exemplar-based strategy was more appropriate. During the training phase, participants learned to solve the tasks well. Their choices in the test phase, where they also encountered previously unseen alternatives, were critical for our modeling approach. In our first modeling analysis, using an outof-sample prediction criterion, we found that on average the cue-based CAM u model predicted participants' choices in the linear environment best, while the exemplar-based jGCM γ 11 predicted choices best in the nonlinear environment. This modeling evidence does not rely on assumptions of how strategy preferences are learned. Thus, our results show that majority of the participants in our experiment have appropriately adopted a cue-based strategy in the linear environment and an exemplar-based strategy in the nonlinear environment, and were able to flexibly shift between them as they encountered a decision problem from one environment to another. However, a substantial number of participants appeared to use a cue-based strategy (CAM u ) in the nonlinear environment. These participants either failed to separate the two environments and adopted the same strategy in both, or they simply failed to adapt adequately to the nonlinear environment 
(Brehmer, 1974;
Busemeyer et al., 1997;
Olsson et al., 2006)
. We favor the latter explanation. 
Stojić, Olsson, and Analytis (2016)
 find that differences in speed of learning could account for the inter-individual variation in strategy adoption within conditions. Hence, we believe these participants were slow learners who would have adopted an exemplar-based strategy given sufficient experience.
We found that participants' choice accuracy in both environments decreased substantially from training to test phase. This drop was not expected in the linear environment. .4
.5
.6
.7
.8
.9  
Figure 4
. Strategies adopted by CSSL models over time in each environment in the training phase, expressed in probabilities of choosing the exemplar strategy, jGCM γ 11 . Probability that the CAM u model is selected is one minus probability of choosing the exemplar strategy. Test phase strategy mixture is simply the mixture from the last trial in the training phase. Points are averages across participants, where for each participant an average across the block was taken. Results of block five and six come from a subset of participants that took additional one or two blocks in the training phase. the advantages of cue-based strategies over exemplar-based strategies is their ability to accurately extrapolate outside the range of experienced exemplars 
(Busemeyer et al., 1997)
. If participants truly used a cue-based strategy in the linear environment they should have no difficulty generalizing their knowledge to the new items in the test phase. However, there were important differences in difficulty between the environments, so this makes the comparison harder. Moreover, cue-based strategies can be poor at extrapolation as well, depending on the specifics of the learning process 
(McDaniel & Busemeyer, 2005)
 and if the weights have not been learned sufficiently well.
In our second modeling analysis we have fitted a contextual version of the strategy selection learning (CSSL) model, with CAM u and jGCM γ 11 in the strategy repertoire, representing cue-based and exemplar-based strategies. The model implements a trial-and-error mechanism by which participants learn over time to associate environments to the strategy which works best within it. The CSSL model predicted the behavior of the participants better than simpler explanations in the form of the original SSL and single strategy models. The evolution of strategy expectancies in the CSSL was consistent with our earlier findings identifying which strategy was used in each environment. Our CSSL model shows an initial preference for a cue-based strategy, as also found in previous studies 
(Rieskamp & Otto, 2006)
. In the linear environment this preference is maintained, while in the nonlinear environment it changes substantially throughout the training phase in favor of an exemplar-based strategy.
In this modeling analysis, many of the participants best fitted with SSL or single strategy models were also the ones that incorrectly used a cue-based strategy in the nonlinear environment, as shown in the first modeling analysis. However, there are inconsistent classifications as well, e.g., participants classified as adaptive on the basis of the first modeling exercise that were not best predicted by a CSSL model in the second modeling analysis. Such differences are most likely due to using only CAM u and jGCM γ 11 in CSSL's strategy repertoire. This was necessary for practical reasons, but it resulted in forcing these two strategies on all participants, while in the first modeling analysis participants were fitted with several models from both cue-and exemplar-based class. Some differences were also expected since the two modeling approaches differ substantially.
In several previous studies it was shown that people adopt different strategies in different environments (e.g., 
Karlsson et al., 2007;
Pachur & Olsson, 2012)
. Crucially, however, their experiments employed between-subject designs such that single participants were not exposed to multiple environments. Consequently, they were concerned less with the mechanisms through which strategies are adopted, focusing instead on identifying the dominant strategy adopted by participants. 
(J. Hoffmann et al., 2014
) is one of the rare studies that used a within-subject design. In their experiments participants performed a multiple cue probability learning task belonging to a linear environment or multiplicative environment, although participants were exposed to them in separate blocks. They found that participants' responses in the linear environment were best described with a linear regression model, while responses in the multiplicative environment were best described with an exemplar model. However, they investigated the role of episodic memory in strategy adoption and did not examine the influence of environment classification on strategy selection, or attempt to model the mechanism behind adopting the strategies in multiple environments.
Lieder and Griffiths (2015) also used a within-subject design, aiming to shed more light on the strategy selection mechanism. Based on their results they concluded that their feature-based cost-benefit model described participants' behavior better than the reinforcement learning approach of the SSL model 
(Rieskamp & Otto, 2006)
. In their experiments they used two similar environments -compensatory and noncompensatory, both of which are linear. Moreover, they have presented cue validities to the participants that made it easy to estimate the accuracy of each strategy. On the other hand, our study favors the reinforcement learning approach as it can deal with much more complex situations, where the importance of features to classify environments still has to be learned. A cost-benefit based strategy selection approach such as the model proposed by 
Lieder and Griffiths (2015)
 would find it difficult to explain how people solve the strategy selection problem in this setting.
In contrast to the cost-benefit model developed by 
Lieder and Griffiths (2015)
, the CSSL model does not require predetermined features to classify environments. For example, the CSSL model does not need to know the statistical properties of the environment to classify it as one in which an exemplar strategy would work best. All that is needed is that decision situations are separated into different categories, which strategy works best in that category can be learned. In our experiment we used a very clear visual feature that participants could use to partition the situations into two groups -one situation was always represented as deciding between "bugs", and the other between "comic" figures. One could argue that we have made the partitioning task too easy and the task lost much on its external validity. The present study can be thought of as a proof of principle -if participants had difficulty with associating different strategies to two easily distinguishable environments, there would be little hope that they would be able to do it in more complex realistic scenarios. In future work, we aim to test the model in situations where the features distinguishing environments are more subtle.
Another concern relates to the scalability of the reinforcement learning approach to such situations. When there are many potential features to distinguish between environments, there is a danger of identifying too many categories. Such over-categorization is wasteful as it reduces the amount of experience with each category, so that learning which strategy works best for that category is difficult. A direction we aim to explore in the future is to combine reinforcement learning with a similarity-based mechanism to generalize over categories. For example, if one learns to prefer a certain strategy when deciding between apples, then based on some similarity measure you might start with a similar strategy when deciding between oranges, but perhaps not when deciding between televisions.
Finally, it is important to note that the issue of categorizing environments extends to any "cognitive toolbox" theory that assumes the existence of a repertoire of mechanisms that can be selected. Such theories are gaining in popularity and can be found in many areas in psychology, from developmental psychology to categorization (for a recent overview, see f 
Scheibehenne et al., 2013)
. Dual system theory can also be seen as a toolbox type of theory (e.g. 
Kahneman, 2011;
Shiffrin & Schneider, 1977)
, where there are two tools in the toolbox -System 1 and System 2 -and the question is how you choose which one to apply when facing multitudes of problems. The problem of categorizing environments is intimately connected to the strategy selection problem, and as we argued above, solving it requires more than a straightforward extension of strategy selection in a single environment. Without successfully addressing both categorization and strategy selection, the toolbox approaches to cognition will be found lacking.


Table A1
Summary of parameter estimates for models in identifying the strategies adopted by the participants in each environment together with their performances in the test phase as indicated by their negative log transformed likelihood, −log(L). We report means and standard deviations in parenthesis for each parameter. For all models except CAM u only three weight parameters were free parameters, the fourth was constrained by those three. = Constrained cue abstraction model; WADD = Weighted additive model; gT T B = generalized take-the-best model; GCM = Generalized context model, prefix p and j denote paired and joint representation respectively, first number in subscripted suffix denotes Minkowski distance parameter while the second denotes similarity function parameter, superscript suffix γ denotes whether scaling parameter was used as well; Envir. = Type of environment; # = Number of parameters; w 1−4 = Weight parameters, for GCM models these are attention parameters.


Table A2
Summary of parameter estimates for strategy selection models. We report means and standard deviations in parenthesis for each parameter. S S L models used strategy parameters for CAM u and jGCM γ 11 for which means are reported in the first two rows of this table, while CS S L models used environment-specific parameters for which means are reported in 
Table A1
. For jGCM γ 11 only three weight parameters were free parameters, the fourth was constrained by those three. .4
Model # w β θ γ λ w 1 w 2 w 3 w 4 CAM u 4 - - - -
-
.5
.6
.7
.8
.9
1.0
C A M u j G C M 1 1 e p S S L q d S S L p C S S L q d C S S L C A M u j G C M 1 1 e p S S L q d S S L p C S S L q d C S S L


Log likelihood weights
Single strategy Original SSL Contextual SSL 
Figure B2
. Model performance in predicting choices in the test phase for contextual strategy selection learning models (CSSL), original strategy selection learning models (SSL), and two single strategy models -CAM u and jGCM γ 11 , computed separately for trials in the linear and nonlinear environment. Performance is expressed as mean log likelihood weight across participants, computed for these six models in the comparison set. Numbers above the bars represent number of participants whose choices in the test phase were best predicted by each of the models.
Figure 1 .
1
Mean accuracy in the test phase dropped compared to the last train-Accuracy of participants' choices in blocks of trials in the training phase and in the test phase. Training blocks consist of 44 linear and 40 nonlinear trials. Result for a block is a mean of individual mean accuracies across trials in a block.


Par. = Number of free parameters in the model; CAM u = Unconstrained cue abstraction model; WADD = Weighted additive model; GCM = Generalized context models.


One of N = 49 N = 18 N = 5 N = 49 N = 49 N = 18 N = 5 N =


u = Unconstrained cue abstraction model; jGCM γ 11 = Generalized context model with joint representation, Minkowski and similarity parameters equal to 1 and free scaling parameter; S S L = Context-free strategy selection learning model, prefix d and p denote deterministic and proportional update, while the suffix θ denotes additional free scaling parameter; CS S L = Contextual strategy selection learning model, prefix d and p denote deterministic and proportional update, while the suffix θ denotes additional free scaling parameter; # = Number of parameters; w 1−4 = Weight or attention parameters.


Table 1
1
Cue patterns and continuous criterion values of the 15 exemplars used in linear and nonlinear environment in the Experiment. Old = exemplar used in both training and test phase; New = new exemplar that occurs only in the test phase. first trial. People tend to have strong prior beliefs that cueoutcome relations are positive and linear
Exemplar No.
Cues
Linear environment
Nonlinear environment
Cue 1 Cue 2 Cue 3 Cue 4 Expected criterion Role Criterion
Role
1
0
0
0
0
0.10
Old
0
New
2
0
0
0
1
0.00
New
0.35
Old
3
0
0
1
0
0.30
Old
0.62
New
4
0
0
1
1
0.20
Old
0.82
Old
5
0
1
0
0
0.40
Old
0.82
New
6
0
1
1
0
0.60
Old
-
-
7
0
1
1
1
0.50
Old
-
-
8
1
0
0
0
0.50
New
0.94
Old
9
1
0
0
1
0.40
Old
1
New
10
1
0
1
0
0.70
New
0.97
New
11
1
0
1
1
0.60
New
0.88
New
12
1
1
0
0
0.80
Old
0.88
Old
13
1
1
0
1
0.70
Old
0.71
New
14
1
1
1
0
1.00
New
0.47
Old
15
1
1
1
1
0.90
Old
0.16
New
Note.


Note. CAM u = Unconstrained cue abstraction model; CAM c
Envir.
Model
#
−log(L)
γ
λ
w 1
w 2
w 3
w 4
Linear
CAM u
4
81 (95)
-
-
12.88 (55.38) 7.11 (13.92) 4.64 (17.19)
1.03 (6.53)
CAM c
3
72 (9)
-
-
0.43 (0.36)
0.55 (0.35)
0.02 (0.06)
0 (0)
WADD
4 530 (454)
∞
-
0.44 (0.38)
0.48 (0.4)
0.06 (0.09)
0.02 (0.03)
gT T B
3 532 (455)
-
-
0.43 (0.34)
0.47 (0.36)
0.08 (0.09)
0.02 (0.03)
jGCM γ 11 jGCM γ 12 jGCM γ 21
5 5 5
69 (28) 71 (23) 70 (23)
11.16 (8.21) 10.69 (8.01) 12.15 (8.22)
7.98 (7.83) 9.61 (8.29) 7.91 (7.98)
0.22 (0.21) 0.23 (0.17) 0.27 (0.3)
0.22 (0.23) 0.25 (0.22) 0.23 (0.28)
0.37 (0.32) 0.36 (0.29) 0.37 (0.36)
0.19 (0.27) 0.16 (0.19) 0.13 (0.25)
pGCM 11 4 pGCM γ 5 11 pGCM γ 5 12 pGCM γ 21 5
72 (7) 72 (27) 71 (27) 77 (36)
-10.47 (7.07) 11.46 (6.87) 14.26 (7.55) 20 (0) 14.51 (7.7) 10.76 (7.06) 12.76 (7.59)
0.32 (0.11) 0.39 (0.3) 0.32 (0.2) 0.42 (0.38)
0.33 (0.14) 0.18 (0.24) 0.24 (0.22) 0.18 (0.29)
0.25 (0.12) 0.24 (0.28) 0.27 (0.25) 0.23 (0.31)
0.1 (0.11) 0.19 (0.26) 0.18 (0.19) 0.17 (0.29)
Nonlinear CAM u
4 175 (147)
-
-
9.32 (8.32)
-10.92 (9.13) -0.35 (0.77)
-2.92 (3.17)
CAM c
3
73 (9)
-
-
0.76 (0.28)
0.07 (0.11)
0.15 (0.23)
0.02 (0.08)
WADDt
4 538 (360)
∞
-
0.65 (0.38)
0.12 (0.1)
0.14 (0.23)
0.09 (0.17)
gT T Bt
3 500 (322)
-
-
0.6 (0.27)
0.21 (0.11)
0.13 (0.21)
0.07 (0.15)
jGCM γ 11 jGCM γ 12 jGCM γ 21
5 181 (185) 5 239 (304) 5 184 (373)
6.61 (7.16) 6.46 (7.53) 7.19 (7.88)
12.77 (7.47) 15.13 (6.78) 12.39 (7.36)
0.16 (0.22) 0.18 (0.2) 0.22 (0.33)
0.37 (0.31) 0.32 (0.23) 0.42 (0.38)
0.25 (0.24) 0.31 (0.18) 0.21 (0.31)
0.22 (0.23) 0.19 (0.2) 0.14 (0.21)
81 (20) 116 (72) 5 142 (100) pGCM 11 4 pGCM γ 5 11 pGCM γ 12 pGCM γ 21 5 112 (102) 13.52 (7.43) 10.45 (7.54) -19.87 (0.48) 11.08 (7.11) 10.45 (7.53) 10.32 (6.6) 12.96 (6.46)
0.1 (0.18) 0.18 (0.21) 0.16 (0.19) 0.13 (0.23)
0.34 (0.15) 0.37 (0.35) 0.23 (0.26) 0.55 (0.42)
0.3 (0.25) 0.34 (0.29) 0.41 (0.18) 0.25 (0.35)
0.26 (0.19) 0.11 (0.14) 0.2 (0.16) 0.06 (0.13)


Other characteristics of environments have also been studied. The link between strategy effectiveness and properties like the number of observations, number of cues, and dominance relations is currently unclear
(Gigerenzer et al., 1999;
Martignon & Hoffrage, 2002;
Martignon & Laskey, 1999)
. Under time pressure people use more frugal heuristic strategies like TTB (e.g.
Rieskamp & Hoffrage, 2008)
. Cognitive effort also plays a role. People with better episodic memory have a stronger tendency to use exemplar-based strategies (J.
Hoffmann et al., 2014)
, presumably because employing this strategy is less costly for these people.


Software, together with exact instructions and stimuli used in the experiment, is publicly available at the Open Science Framework website: https://osf.io/3q5if/. Raw data from the experiment is publicly available on Figshare: http://dx.doi.org/ 10.6084/m9.figshare.1585822.


The update equation looks different than the usual delta learning rule
(Rescorla & Wagner, 1972)
. This works equally well as in this context the absolute value of the strategy expectancy does not matter much, only relative values play a role. This learning rule might then obviate the need for the temperature parameter in the choice rule above.


Note however that, for the sake of simplicity, the models that we use to represent the strategies are not learning models that adapt their parameters on a trial-by-trial basis. Instead, for each individual we estimate the parameters of each model and environment separately, and then use them in the CSSL model.








Appendix A Parameter Estimation and Model Selection
Identifying the strategies adopted by the participants All choice models were fitted to each individual participant's choices in the last two blocks in the training phase, separately for trials in the linear environment and nonlinear environment. Parameters were found by minimizing the log likelihood of the data given the choice probabilities predicted by the model. The likelihood of the data set, L, of model i is given by
where T is total number of trials being modeled, and P(M t = C t ) is probability of model making the same choice as participant made in trial t. Number of trials was 88 for the linear and 80 for the nonlinear environment. Optimization was done on the log transformed likelihood, −ln(L(data|M i )), using the Nelder-Mead simplex algorithm implemented in the optim function in R (R Core Team, 2015). For model selection we used a version of generalization criterion 
(Busemeyer & Wang, 2000
) -for each model we used parameters estimated on the training data from one environment and predicted choices in the test phase of the same environment that were designed to discriminate better between the CAM and GCM models. As a measure of model performance we used log transformed likelihood, while for model comparison we used log likelihood weights (LL weights), following 
Wagenmakers and Farrell (2004)
. Similar to AIC or BIC weights, LL weights is a simple transformation of raw log likelihood scores that can be directly interpreted as conditional probabilities for each model. From the differences in log likelihoods we obtain an estimate of the relative likelihood L of the model i by
where L(data|M min ) is the likelihood of the model in our comparison set with the minimum likelihood, i.e. the best model. Then we normalize the relative model likelihoods to obtain the LL weights
where K is the number of models in the comparison set. This makes the weights dependent on models that are being compared, stressing the relative aspect of the model comparison.
We have always compared four models -CAM u , WADD, pGCM γ 11 and jGCM γ 11 , that we set out to investigate as primary models, even though we did fit more than these four. Importantly, LL weights allow for better interpretation of observed differences in model performances. Weight w i can be interpreted as the probability that M i is the best model, given the data and the set of models in the comparison set.


Contextual strategy selection learning
The fitting procedure is the same as in identifying the strategy used by participants in the linear and nonlinear environment, however the models were fitted to all blocks in the training phase and both environments jointly. When estimating parameters for strategy selection models, SSL and CSSL, we fixed the strategy parameters -for SSL models to the ones estimated for single strategies (CAM u and jGCM γ 11 fitted to both environments), and for CSSL models the parameters estimated according to the procedure from the previous section. This was implemented on individual level. Model comparison followed the procedure described in the previous section, but here six models comprised the comparison set -
Appendix B


Additional results
Linear environment Nonlinear environment .


5
.6
.7
.8
.9
1.0 1 2 3 4 5 6 Test 1 2 3 4 5 6 Test Block Proportion of correct choices Fast (N=31) Medium (N=13) Slow (N=5) 
Figure B1
. Choice accuracy in blocks in the training and the test phase. Participants that took additional one or two blocks in the training phase are illustrated separately, they are marked as slow or medium speed of reaching the accuracy level.
 










A contingency model for the selection of decision strategies




B
; L R
Auguie






T
R
Mitchell










Academy of Management Review




3










gridExtra: functions in Grid graphics








A response-time approach to comparing generalized rational and take-the-best models of decision making




F
B
Bergert






R
M
Nosofsky




10.1037/0278-7393.33.1.107






Journal of Experimental Psychology: Learning, Memory, and Cognition




33
















Hypotheses about relations between scaled variables in the learning of probabilistic inference tasks. Organizational Behavior and Human Performance




B
Brehmer




10.1016/0030-5073(74






11














The psychology of linear judgement models




B
Brehmer








Acta Psychologica




87
















Adaptive flexibility and maladaptive routines in selecting fast and frugal decision strategies




A
Bröder






S
Schiffer




10.1037/0278-7393.32.4.904






Learning, Memory, and Cognition






32














Learning functional relations based on experience with input-output pairs by humans and artificial neural networks




J
R
Busemeyer






E
Byun






E
L
Delosh






M
A
Mcdaniel








Knowledge, concepts and categories. studies in cognition


K. Lamberts & D. R. Shanks






















M
A
Cambridge






Us






MIT Press












Model Comparisons and Model Selections Based on Generalization Criterion Methodology




J
R
Busemeyer






Y.-M
Wang




10.1006/jmps.1999.1282






Journal of Mathematical Psychology




44
















Problem solving strategies: A selection mechanism, some implications, and some data




J
J
Christensen-Szalanski




10.1016/0030-5073(78)90019-3






Organizational Behavior and Human




22
















On adaptation, maximization, and reinforcement learning among cognitive strategies




I
Erev






G
Barron




10.1037/0033-295X.112.4.912






Psychological Review




112
















Reasoning the fast and frugal way: Models of bounded rationality




G
Gigerenzer






D
G
Goldstein








Psychological Review




103
















Simple heuristics that make us smart




G
Gigerenzer






P
M
Todd






Research Group








Oxford University Press


New York, NY, US












Pillars of judgment: how memory abilities affect performance in rule-based and exemplar-based judgments




J
Hoffmann






B
Von Helversen






J
Rieskamp




10.1037/a0037989






Journal of Experimental Psychology: General




143
















Deliberation's blindsight: how cognitive load can improve judgments




J
A
Hoffmann






B
Von Helversen






J
Rieskamp




doi: 10.1177/ 0956797612463581






Psychological Science




24
















Ignoring information in binary choice with continuous variables: When is less more




R
M
Hogarth






N
Karelaia




10.1016/j.jmp.2005.01.001






Journal of Mathematical Psychology




49
















Simple Models for Multiattribute Choice with Many Alternatives: When It Does and Does Not Pay to Face Trade-offs with Binary Attributes




R
M
Hogarth






N
Karelaia




10.1287/mnsc.1050.0448






Management Science




51
















Regions of Rationality: Maps for Bounded Agents




R
M
Hogarth






N
Karelaia




10.1287/deca.1060.0063






Decision Analysis




3
















Take-the-best" and other simple strategies: Why and when they work "well" with binary cues




R
M
Hogarth






N
Karelaia




10.1007/s11238-006-9000-8






Theory and Decision




61
















Heuristic and linear models of judgment: matching rules and environments




R
M
Hogarth






N
Karelaia




10.1037/0033-295X.114.3.733






Psychological Review




114
















Cue abstraction and exemplar memory in categorization




P
Juslin






S
Jones






H
Olsson






A
Winman




10.1037/0278-7393.29.5.924






Journal of Experimental Psychology: Learning, Memory, and Cognition




29
















Thinking, fast and slow




D
Kahneman








New York, NY, US: Farrar, Straus and Giroux












Adaptive changes between cue abstraction and exemplar memory in a multiplecue judgment




L
Karlsson






P
Juslin






H
Olsson








Psychonomic Bulletin & Review




14
















When to use which heuristic: A rational solution to the strategy selection problem




F
Lieder






T
L
Griffiths








Proceedings of the 37th annual conference of the cognitive science society


the 37th annual conference of the cognitive science society
Austin, TX, US




Cognitive Science Society
















Individual Choice Behavior




R
D
Luce








Wiley


New York, NY, US












Fast, frugal, and surprisingly accurate heuristics




R
D
Luce








Behavioral and Brain Sciences




23
















Fast, frugal, and fit: Simple heuristics for paired comparison




L
Martignon






U
Hoffrage








Theory and Decision




52
















Bayesian Benchmarks for Fast and Frugal Heuristics




L
Martignon






K
B
Laskey




G. Gigerenzer, P. M. Todd, & A. Group






Oxford University Press




New York, NY, US






Simple heuristics that make us smart








The conceptual basis of function learning and extrapolation: comparison of rulebased and associative-based models




M
A
Mcdaniel






J
R
Busemeyer




10.3758/BF03196347






Psychonomic Bulletin & Review




12
















Heuristics all the way up?




A
Morton








Behavioral and Brain Sciences




23
















Choice, similarity, and the context theory of classification




R
M
Nosofsky




10.1037/0278-7393.10.1.104






ogy: Learning, Memory, and Cognition






10


















R
M
Nosofsky


















Attention, similarity, and the identification-categorization relationship


doi: 10.1037/ 0096-3445.115.1.39






Journal of Experimental Psychology: General




115














Limitations of Exemplar Models of Multi-Attribute Probabilistic Inference




R
M
Nosofsky






F
B
Bergert




10.1037/0278-7393.33.6.999






Journal of Experimental Psychology: Learning, Memory, and Cognition




33
















Go with the flow: How to master a nonlinear multiple-cue judgment task




A.-C
Olsson






T
Enkvist






P
Juslin




10.1037/0278-7393.32.6.1371






Journal of Experimental Psychology: Learning, Memory, and Cognition






32














Type of learning task impacts performance and strategy selection in decision making




T
Pachur






H
Olsson




doi: 10.1016/ j.cogpsych.2012.03.003






Cognitive Psychology




65
















The adaptive decision maker




J
W
Payne






J
R
Bettman






E
J
Johnson








Cambridge University Press


New York, NY, US












PsychoPy -Psychophysics software in Python




J
W
Peirce




10.1016/j.jneumeth.2006.11.017






Journal of Neuroscience Methods




162
















R: A language and environment for statistical computing




R Core Team










Vienna, Austria






: R Foundation for Statistical Computing








A theory of Pavlovian conditioning: Variations in the effectiveness of reinforcement and nonreinforcement




R
A
Rescorla






A
R
Wagner








Classical conditioning ii: Current research and theory


A. H. Black & W. F. Prokasy


New York, NY, US




Appleton-Century-Crofts
















doMC: Foreach parallel adaptor for the multicore package




Revolutionanalytics




















Perspectives of probabilistic inferences: Reinforcement learning and an adaptive network compared




J
Rieskamp




10.1037/0278-7393.32.6.1355






Journal of Experimental Psychology: Learning, Memory, and Cognition






32














Inferences under time pressure: how opportunity costs affect strategy selection




J
Rieskamp






U
Hoffrage




10.1016/j.actpsy.2007.05.004






Acta Psychologica




127
















SSL: a theory of how people learn to select strategies




J
Rieskamp






P
E
Otto




10.1037/0096-3445.135.2.207






Journal of Experimental Psychology: General




135
















Principles of metareasoning




S
J
Russell






E
Wefald




doi: 10.1016/ 0004-3702(91






Artificial Intelligence




49


90015














Testing adaptive toolbox models: a Bayesian hierarchical approach




B
Scheibehenne






J
Rieskamp






E.-J
Wagenmakers




doi: 10.1037/ a0030777






Psychological Review




120
















tikzDevice: R Graphics Output in LaTeX Format




C
Sharpsteen






C
Bracken




















Controlled and automatic human information processing: II. Perceptual learning, automatic attending and a general theory




R
M
Shiffrin






W
Schneider




10.1037/0033-295X.84.2.127






Psychological Review




84


2
















Learning in a changing environment




M
Speekenbrink






D
R
Shanks




10.1037/a0018620






Journal of Experimental Psychology: General




139
















Explaining inter-individual variability in strategy selection: A cue weight learning approach




H
Stojić






H
Olsson






P
P
Analytis










Proceedings of the 14th International Conference on Cognitive Modeling


D. Reitter & F. E. Ritter


the 14th International Conference on Cognitive Modeling
University Park, PA




Penn State
















Not everything looks like a nail: Learning to select appropriate decision strategies in multiple environments -Project files. Open Science Framework




H
Stojić






H
Olsson






M
Speekenbrink




















Not everything looks like a nail: Learning to select appropriate decision strategies in multiple environments -Raw data from experiments. figshare




H
Stojić






H
Olsson






M
Speekenbrink




10.6084/m9.figshare.1585822
















Précis of Simple heuristics that make us smart




P
M
Todd






G
Gigerenzer








Behavioral and Brain Sciences




23
















The mapping model: a cognitive theory of quantitative estimation




B
Von Helversen






J
Rieskamp




doi: 10.1037/ 0096-3445.137.1.73






Journal of Experimental Psychology: General




137
















AIC model selection using Akaike weights




E.-J
Wagenmakers






S
Farrell




10.3758/BF03206482






Psychonomic Bulletin & Review




11
















Reshaping Data with the reshape Package




H
Wickham








Journal of Statistical Software




21


12
















ggplot2: elegant graphics for data analysis




H
Wickham








Springer


New York












dplyr: A Grammar of Data Manipulation




H
Wickham






R
Francois




















fOptions: Basics of Option Valuation




D
Wuertz





















"""

Output: Provide your response as a JSON list in the following format:

[
  {
    "topic_or_construct": "...",
    "measured_by": "...",
    "justification": "..."
  },
  ...
]